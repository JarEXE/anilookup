{"version":3,"file":"static/js/233.3bdef883.chunk.js","mappings":"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","sources":["components/anime/Anime.js"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingOverlay from \"react-loading-overlay-ts\";\n\nfunction Anime(props) {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isActive, setIsActive] = React.useState(false);\n  let kitsuData;\n\n  const customStyles = {\n    marginBottom: \"10px\",\n    marginTop: \"10px\",\n    padding: \"10px 5px\",\n    boxShadow: props.isDarkMode\n      ? \"0px 0px 10px 5px rgba(60, 60, 60)\"\n      : \"0px 0px 10px 5px rgba(0, 0, 0, 0.2)\",\n    borderRadius: \"10px\",\n    minWidth: \"215px\",\n    background: props.isDarkMode ? \"#181818\" : \"#fff\",\n  };\n  const navigate = useNavigate();\n\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    setIsActive(true);\n\n    await fetch(\n      `https://kitsu.io/api/edge/anime?filter[text]=${props.title}&page[limit]=5`\n    ).then(async (response) => {\n      kitsuData = await response.json();\n    });\n\n    const matchingItem = kitsuData.data.find(\n      (item) =>\n        item.attributes.canonicalTitle === props.title ||\n        item.attributes.abbreviatedTitles.includes(props.title) ||\n        item.attributes.titles.en === props.title ||\n        item.attributes.titles.en_jp === props.title ||\n        item.attributes.titles.ja_jp === props.title\n    );\n\n    if (matchingItem) {\n      const coverImage = matchingItem.attributes.coverImage\n        ? matchingItem.attributes.coverImage.original\n        : \"\";\n      sessionStorage.setItem(\"kitsuCover\", coverImage);\n      sessionStorage.setItem(\"itemId\", `/anime/${props.malid}`);\n      navigate(\"/details\");\n    } else {\n      sessionStorage.setItem(\"kitsuCover\", \"\");\n      sessionStorage.setItem(\"itemId\", `/anime/${props.malid}`);\n      navigate(\"/details\");\n    }\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            background: \"rgba(0, 0, 0, 0.75)\",\n            zIndex: \"999\",\n          }}\n        >\n          <LoadingOverlay\n            active={isActive}\n            spinner={<span className=\"overlay_loader\"></span>}\n          ></LoadingOverlay>\n        </div>\n      ) : (\n        <div\n          className=\"col-md-3\"\n          style={{\n            margin: \"10px\",\n            height: \"800px\",\n          }}\n        >\n          <div\n            style={customStyles}\n            className=\"well text-center zoomed-landing-page\"\n          >\n            <div className=\"boxContainer\">\n              <img\n                src={props.img}\n                alt=\"anime cover\"\n                loading=\"lazy\"\n                style={{\n                  marginBottom: \"20px\",\n                  height: \"300px\",\n                  width: \"200px\",\n                  borderRadius: \"10px\",\n                }}\n              />\n              <div className=\"summary-container\">\n                <h5>{props.title}</h5>\n                <div\n                  className={`${\n                    props.isDarkMode ? \"synopsisDark\" : \"synopsis\"\n                  }`}\n                >\n                  <p>{props.synopsis}</p>\n                </div>\n              </div>\n            </div>\n            <button\n              onClick={handleSubmit}\n              className={`btn btn-${props.isDarkMode ? \"info\" : \"dark\"}`}\n            >\n              More details\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Anime;\n"],"names":["props","kitsuData","_React$useState","React","_React$useState2","_slicedToArray","isLoading","setIsLoading","_React$useState3","_React$useState4","isActive","setIsActive","customStyles","marginBottom","marginTop","padding","boxShadow","isDarkMode","borderRadius","minWidth","background","navigate","useNavigate","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","matchingItem","coverImage","wrap","_context2","prev","next","fetch","concat","title","then","_ref2","_callee","response","_context","json","sent","stop","_x","apply","arguments","data","find","item","attributes","canonicalTitle","abbreviatedTitles","includes","titles","en","en_jp","ja_jp","original","sessionStorage","setItem","malid","_jsx","_Fragment","children","style","position","top","left","width","height","zIndex","LoadingOverlay","active","spinner","className","margin","_jsxs","src","img","alt","loading","synopsis","onClick"],"sourceRoot":""}